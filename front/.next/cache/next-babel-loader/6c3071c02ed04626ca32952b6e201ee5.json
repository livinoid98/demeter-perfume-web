{"ast":null,"code":"import axios from 'axios';\nimport { all, call, put, fork, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI() {}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/api/user', signUpData);\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/ccy98/Desktop/Demeter/front/sagas/user.js"],"names":["axios","all","call","put","fork","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","signUpAPI","signUpData","post","login","type","err","console","error","signUp","action","data","watchLogin","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAA0FC,eAA1F,QAAgH,kBAAhH;;AAEA,SAASC,QAAT,GAAmB,CAElB;;AAED,SAASC,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOd,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBD,UAAxB,CAAP;AACH;;AAED,UAAUE,KAAV,GAAiB;AACb,MAAG;AACC,UAAMd,IAAI,CAACU,QAAD,CAAV;AACA,UAAMT,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACV;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMW,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACT;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,MAAV,CAAiBC,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMpB,IAAI,CAACW,SAAD,EAAYS,MAAM,CAACC,IAAnB,CAAV;AACA,UAAMpB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMQ,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACN;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUa,UAAV,GAAsB;AAClB,QAAMnB,UAAU,CAACC,cAAD,EAAiBU,KAAjB,CAAhB;AACH;;AAED,UAAUS,WAAV,GAAuB;AACnB,QAAMpB,UAAU,CAACI,eAAD,EAAkBY,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAoB;AAC/B,QAAMzB,GAAG,CAAC,CACNG,IAAI,CAACoB,UAAD,CADE,EAENpB,IAAI,CAACqB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport {all, call, put, fork, takeLatest} from 'redux-saga/effects'\r\nimport {LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE} from '../reducers/user'\r\n\r\nfunction loginAPI(){\r\n\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/api/user', signUpData,);\r\n}\r\n\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}