{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/ccy98/Desktop/Demeter/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createSagaMiddleware","createWrapper","composeWithDevTools","reducer","rootSaga","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAChC,QAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,QAAMQ,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAG,QACfV,OAAO,CAACF,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CADQ,GAEfN,mBAAmB,CACjBL,eAAe,CAAC,GAAGW,WAAJ,CADE,CAFrB;AAKA,QAAME,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBR,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACH,CAXD;;AAaA,MAAMG,OAAO,GAAGZ,aAAa,CAACI,cAAD,EAAiB;AAACS,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import {applyMiddleware, createStore, compose} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {createWrapper} from 'next-redux-wrapper'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\nconst configureStore = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(\r\n        applyMiddleware(...middlewares),\r\n    );\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {debug:process.env.NODE_ENV === 'development'});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}