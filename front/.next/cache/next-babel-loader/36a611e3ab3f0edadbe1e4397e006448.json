{"ast":null,"code":"import axios from 'axios';\nimport { all, call, put, fork, takeLatest } from 'redux-saga/effects';\nimport { router, createBrowserHistory } from 'redux-saga-router';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\nconst history = createBrowserHistory();\n\nfunction loginAPI(loginData) {\n  return axios.post('/api/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/api/user/', signUpData);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/ccy98/Desktop/Demeter/front/sagas/user.js"],"names":["axios","all","call","put","fork","takeLatest","router","createBrowserHistory","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","history","loginAPI","loginData","post","withCredentials","signUpAPI","signUpData","login","action","result","data","type","err","console","error","signUp","watchLogin","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,SAAQC,MAAR,EAAgBC,oBAAhB,QAA2C,mBAA3C;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAA0FC,eAA1F,QAAgH,kBAAhH;AAEA,MAAMC,OAAO,GAAGP,oBAAoB,EAApC;;AAEA,SAASQ,QAAT,CAAkBC,SAAlB,EAA4B;AACxB,SAAOhB,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA8BD,SAA9B,EAAyC;AAC5CE,IAAAA,eAAe,EAAC;AAD4B,GAAzC,CAAP;AAGH;;AAED,SAASC,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOpB,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBG,UAAzB,CAAP;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMrB,IAAI,CAACa,QAAD,EAAWO,MAAM,CAACE,IAAlB,CAAzB;AACA,UAAMrB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAAChB,cADC;AAENe,MAAAA,IAAI,EAACD,MAAM,CAACC;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAME,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMvB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAACf;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUmB,MAAV,CAAiBP,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMpB,IAAI,CAACiB,SAAD,EAAYG,MAAM,CAACE,IAAnB,CAAV;AACA,UAAMrB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAACb;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMc,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMvB,GAAG,CAAC;AACNsB,MAAAA,IAAI,EAACZ;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUiB,UAAV,GAAsB;AAClB,QAAMzB,UAAU,CAACG,cAAD,EAAiBa,KAAjB,CAAhB;AACH;;AAED,UAAUU,WAAV,GAAuB;AACnB,QAAM1B,UAAU,CAACM,eAAD,EAAkBkB,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAM/B,GAAG,CAAC,CACNG,IAAI,CAAC0B,UAAD,CADE,EAEN1B,IAAI,CAAC2B,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport {all, call, put, fork, takeLatest} from 'redux-saga/effects'\r\nimport {router, createBrowserHistory} from 'redux-saga-router'\r\nimport {LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE} from '../reducers/user'\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction loginAPI(loginData){\r\n    return axios.post('/api/user/login', loginData, {\r\n        withCredentials:true,\r\n    });\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/api/user/', signUpData);\r\n}\r\n\r\nfunction* login(action){\r\n    try{\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS,\r\n            data:result.data\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}