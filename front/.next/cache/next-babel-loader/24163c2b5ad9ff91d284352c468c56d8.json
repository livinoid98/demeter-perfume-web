{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\nimport { all, call, put, fork, takeLatest } from 'redux-saga/effects';\nimport { WRITE_POST_REQUEST } from '../reducers/post';\n\nfunction createAPI(createData) {\n  return axios.post('/api/post/', createData, {\n    withCredentials: true\n  });\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/api/user/', signUpData);\n}\n\nfunction* create(action) {\n  try {\n    const result = yield call(createAPI, action.data);\n    yield put({\n      type: WRITE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: WRITE_POST_FAILURE\n    });\n  }\n}\n\nfunction* read(action) {\n  try {\n    yield call(readAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE\n    });\n  }\n}\n\nfunction* watchCreate() {\n  yield takeLatest(WRITE_POST_REQUEST, create);\n}\n\nfunction* watchRead() {\n  yield takeLatest(LOAD_POST_REQUEST, read);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchCreate), fork(watchRead)]);\n}","map":{"version":3,"sources":["C:/Users/ccy98/Desktop/Demeter/front/sagas/post.js"],"names":["axios","Router","all","call","put","fork","takeLatest","WRITE_POST_REQUEST","createAPI","createData","post","withCredentials","signUpAPI","signUpData","create","action","result","data","type","WRITE_POST_SUCCESS","err","console","error","WRITE_POST_FAILURE","read","readAPI","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","watchCreate","watchRead","LOAD_POST_REQUEST","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,oBAA/C;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;;AAEA,SAASC,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOT,KAAK,CAACU,IAAN,CAAW,YAAX,EAAyBD,UAAzB,EAAqC;AACxCE,IAAAA,eAAe,EAAC;AADwB,GAArC,CAAP;AAGH;;AAED,SAASC,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOb,KAAK,CAACU,IAAN,CAAW,YAAX,EAAyBG,UAAzB,CAAP;AACH;;AAED,UAAUC,MAAV,CAAiBC,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACK,SAAD,EAAYO,MAAM,CAACE,IAAnB,CAAzB;AACA,UAAMb,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACC,kBADC;AAENF,MAAAA,IAAI,EAACD,MAAM,CAACC;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMG,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMhB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACK;AADC,KAAD,CAAT;AAGH;AACJ;;AAGD,UAAUC,IAAV,CAAeT,MAAf,EAAsB;AAClB,MAAG;AACC,UAAMZ,IAAI,CAACsB,OAAD,EAAUV,MAAM,CAACE,IAAjB,CAAV;AACA,UAAMb,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACQ;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMN,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMhB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAACS;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUC,WAAV,GAAuB;AACnB,QAAMtB,UAAU,CAACC,kBAAD,EAAqBO,MAArB,CAAhB;AACH;;AAED,UAAUe,SAAV,GAAqB;AACjB,QAAMvB,UAAU,CAACwB,iBAAD,EAAoBN,IAApB,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAM7B,GAAG,CAAC,CACNG,IAAI,CAACuB,WAAD,CADE,EAENvB,IAAI,CAACwB,SAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios'\r\nimport Router from 'next/router'\r\nimport {all, call, put, fork, takeLatest} from 'redux-saga/effects'\r\nimport {WRITE_POST_REQUEST} from '../reducers/post'\r\n\r\nfunction createAPI(createData){\r\n    return axios.post('/api/post/', createData, {\r\n        withCredentials:true,\r\n    });\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('/api/user/', signUpData);\r\n}\r\n\r\nfunction* create(action){\r\n    try{\r\n        const result = yield call(createAPI, action.data);\r\n        yield put({\r\n            type:WRITE_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:WRITE_POST_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* read(action){\r\n    try{\r\n        yield call(readAPI, action.data);\r\n        yield put({\r\n            type:LOAD_POST_SUCCESS,\r\n        });\r\n    }catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type:LOAD_POST_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchCreate(){\r\n    yield takeLatest(WRITE_POST_REQUEST, create);\r\n}\r\n\r\nfunction* watchRead(){\r\n    yield takeLatest(LOAD_POST_REQUEST, read);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchCreate),\r\n        fork(watchRead),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}